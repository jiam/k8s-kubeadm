apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: csd-mysql-cluster
  namespace: csd-fusion
spec:
  selector:
    matchLabels:
      app: csd-mysql-cluster
  serviceName: csd-mysql
  replicas: 3
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: csd-mysql-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9104"
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: init-config
        command: ['/bin/bash', '/etc/mysql/conf.d-configmap/init.sh']
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DATADIR
          value: /data/db
        - name: AUTO_NEW_CLUSTER
          value: "false"
        workingDir: /etc/mysql/conf.d-configmap
        volumeMounts:
        - name: mysql
          mountPath: /data
        - name: conf-readonly
          mountPath: /etc/mysql/conf.d-configmap
        - name: conf
          mountPath: /etc/mysql/conf.d
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
        image: 10.16.16.4:5000/csd-fusion/mariadb:10.2.19
      containers:
      - name: mariadb
        image: 10.16.16.4:5000/csd-fusion/mariadb:10.2.19
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4444
          name: sst
        - containerPort: 4567
          name: replication
        - containerPort: 4567
          protocol: UDP
          name: replicationudp
        - containerPort: 4568
          name: ist
        env:
        - name: MYSQL_ROOT_HOST
          value: "localhost"
        - name: MYSQL_INITDB_SKIP_TZINFO
          value: "yes"
        - name: MYSQL_ROOT_PASSWORD
          value: "12345678"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - >-
              '['
              ON =
              $(mysql -uroot -p12345678 -e "SHOW STATUS LIKE 'wsrep_ready';" -N -B | sed 's/.*ON/ON/')
              ']'
          initialDelaySeconds: 30
        livenessProbe:
          exec:
            command:
            - mysql
            - -uroot
            - -p12345678
            - -e
            - "SHOW DATABASES;"
          # might need to be tweaked for large initial state transfers
          initialDelaySeconds: 60
        volumeMounts:
        - name: mysql
          mountPath: /data
        - name: conf
          mountPath: /etc/mysql/conf.d
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
      - name: metrics
        image: 10.16.16.4:5000/csd-fusion/mysqld-exporter:v0.11.0
        env:
        - name: DATA_SOURCE_NAME
          value: root@(localhost:3306)/
        ports:
        - containerPort: 9104
      volumes:
      - name: conf
        emptyDir: {}
      - name: conf-readonly
        configMap:
          name: mysql-cluster-conf
      - name: initdb
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: mysql
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: example-nfs
      resources:
        requests:
          storage: 1Gi
